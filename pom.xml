<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<packaging>jar</packaging>
	<groupId>com.crimsoncricket.webjars</groupId>
	<artifactId>swagger-js</artifactId>
	<version>2.1.0-SNAPSHOT</version>
	<name>Swagger JS library</name>
	<description>WebJar for Swagger JS library</description>


	<licenses>
		<license>
			<name>Apache 2.0</name>
			<url>https://github.com/swagger-api/swagger-js</url>
			<distribution>repo</distribution>
		</license>
	</licenses>


	<dependencies>
	</dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<upstream.version>3.12.1</upstream.version>
		<upstream.url>https://github.com/swagger-api/swagger-js/archive</upstream.url>
		<workDir>${project.build.directory}/${project.artifactId}-${upstream.version}</workDir>
		<destDir>${project.build.outputDirectory}/META-INF/resources/webjars/${project.artifactId}/${upstream.version}</destDir>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>download-single</goal>
						</goals>
						<configuration>
							<url>${upstream.url}</url>
							<fromFile>v${upstream.version}.zip</fromFile>
							<toFile>${project.build.directory}/${project.artifactId}.zip</toFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="unzip archive"/>
								<unzip src="${project.build.directory}/${project.artifactId}.zip" dest="${project.build.directory}"/>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.11.0</version>
				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v12.16.3</nodeVersion>
							<npmVersion>6.14.4</npmVersion>
							<installDirectory>${user.home}/tools</installDirectory>
						</configuration>
					</execution>
					<execution>
						<id>npm ci</id>
						<phase>compile</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>ci</arguments>
							<workingDirectory>${workDir}</workingDirectory>
							<installDirectory>${user.home}/tools</installDirectory>
						</configuration>
					</execution>
					<execution>
						<id>npm build</id>
						<phase>compile</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build:umd:browser</arguments>
							<workingDirectory>${workDir}</workingDirectory>
							<installDirectory>${user.home}/tools</installDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-dist</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${destDir}</outputDirectory>
							<resources>
								<resource>
									<directory>${workDir}/dist</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>clean-workdir</id>
						<phase>compile</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${workDir}</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
				<version>1.15.0</version>
			</plugin>
		</plugins>

	</build>

</project>
